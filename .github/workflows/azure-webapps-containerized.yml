name: Build and deploy a containerized python app to Azure Web App

env:
  AZURE_WEBAPP_NAME: ga-testt-containerized  # set this to the name of your Azure Web App
  PYTHON_VERSION: '3.12'              # set this to the Python version to use

on:
  # push:
  #   branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Train model and save as pickle
        run: python wine.py

      # Container build and push to acr using username password of acr
      
      - name: Log in to ACR with admin credentials
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.REGISTRY_NAME }}.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.REGISTRY_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.REGISTRY_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:latest



  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'

    steps:
      - name: Azure CLI Login with Publish Profile
        uses: azure/login@v1
        with:
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_C }}

      - name: Set container image from ACR
        run: |
          az webapp config container set \
            --name ${{ secrets.AZURE_WEBAPP_NAME_C }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --docker-custom-image-name ${{ secrets.REGISTRY_NAME }}.azurecr.io/${{ secrets.IMAGE_NAME }}:latest \
            --docker-registry-server-url https://${{ secrets.REGISTRY_NAME }}.azurecr.io \
            --docker-registry-server-user ${{ secrets.ACR_USERNAME }} \
            --docker-registry-server-password ${{ secrets.ACR_PASSWORD }}

      - name: Restart App Service
        run: |
          az webapp restart \
            --name ${{ secrets.AZURE_WEBAPP_NAME_C }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }}

      - name: Set deployment URL
        id: deploy-to-webapp
        run: echo "webapp-url=https://${{ secrets.AZURE_WEBAPP_NAME_C }}.azurewebsites.net" >> $GITHUB_OUTPUT
